extend type Query {
  reviews(
    before: Cursor
    after: Cursor
    first: Int
    last: Int
  ): ReviewConnection!
  review(id: String!): Review!
}

extend type Mutation {
  reviewCreate(
    input: NewReview!
    authorId: String!
    productId: String!
  ): Review!
  reviewDelete(id: String!): Boolean!
}

type Review @key(fields: "id") {
  id: String!
  body: String!
  author: User! @provides(fields: "username")
  product: Product!
}

extend type User @key(fields: "id") {
  id: ID! @external
  email: String! @external
  username: String! @external
  reviews(
    before: Cursor
    after: Cursor
    first: Int
    last: Int
  ): ReviewConnection!
}

extend type Manufacturer @key(fields: "id") {
  id: ID! @external
}

extend type Product @key(fields: "id") {
  id: ID! @external
  manufacturer: Manufacturer! @external
  reviews(
    before: Cursor
    after: Cursor
    first: Int
    last: Int
  ): ReviewConnection!
}

type ReviewConnection {
  edges: [ReviewEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ReviewEdge {
  node: Review
  cursor: Cursor!
}

input NewReview {
  body: String!
}
